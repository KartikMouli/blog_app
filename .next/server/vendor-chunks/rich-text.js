/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/rich-text";
exports.ids = ["vendor-chunks/rich-text"];
exports.modules = {

/***/ "(ssr)/./node_modules/rich-text/index.js":
/*!*****************************************!*\
  !*** ./node_modules/rich-text/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/type */ \"(ssr)/./node_modules/rich-text/lib/type.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmljaC10ZXh0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLG9HQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXJ0ZXIvLi9ub2RlX21vZHVsZXMvcmljaC10ZXh0L2luZGV4LmpzPzIzNWIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi90eXBlJyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rich-text/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/rich-text/lib/delta.js":
/*!*********************************************!*\
  !*** ./node_modules/rich-text/lib/delta.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var diff = __webpack_require__(/*! fast-diff */ \"(ssr)/./node_modules/fast-diff/diff.js\");\nvar is = __webpack_require__(/*! ./is */ \"(ssr)/./node_modules/rich-text/lib/is.js\");\nvar op = __webpack_require__(/*! ./op */ \"(ssr)/./node_modules/rich-text/lib/op.js\");\n\n\nvar NULL_CHARACTER = String.fromCharCode(0);  // Placeholder char for embed in diff()\n\n\nvar Delta = function (ops) {\n  // Assume we are given a well formed ops\n  if (is.array(ops)) {\n    this.ops = ops;\n  } else if (is.object(ops) && is.array(ops.ops)) {\n    this.ops = ops.ops;\n  } else {\n    this.ops = [];\n  }\n};\n\n\nDelta.prototype.insert = function (text, attributes) {\n  var newOp = {};\n  if (is.string(text)) {\n    if (text.length === 0) return this;\n    newOp.insert = text;\n  } else if (is.number(text)) {\n    newOp.insert = text;\n  }\n  if (is.object(attributes) && Object.keys(attributes).length > 0) newOp.attributes = attributes;\n  return this.push(newOp);\n};\n\nDelta.prototype['delete'] = function (length) {\n  if (length <= 0) return this;\n  return this.push({ 'delete': length });\n};\n\nDelta.prototype.retain = function (length, attributes) {\n  if (length <= 0) return this;\n  var newOp = { retain: length };\n  if (is.object(attributes) && Object.keys(attributes).length > 0) newOp.attributes = attributes;\n  return this.push(newOp);\n};\n\nDelta.prototype.push = function (newOp) {\n  var index = this.ops.length;\n  var lastOp = this.ops[index - 1];\n  newOp = op.clone(newOp);\n  if (is.object(lastOp)) {\n    if (is.number(newOp['delete']) && is.number(lastOp['delete'])) {\n      this.ops[index - 1] = { 'delete': lastOp['delete'] + newOp['delete'] };\n      return this;\n    }\n    // Since it does not matter if we insert before or after deleting at the same index,\n    // always prefer to insert first\n    if (is.number(lastOp['delete']) && (is.string(newOp.insert) || is.number(newOp.insert))) {\n      index -= 1;\n      lastOp = this.ops[index - 1];\n      if (!is.object(lastOp)) {\n        this.ops.unshift(newOp);\n        return this;\n      }\n    }\n    if (is.equal(newOp.attributes, lastOp.attributes)) {\n      if (is.string(newOp.insert) && is.string(lastOp.insert)) {\n        this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };\n        if (is.object(newOp.attributes)) this.ops[index - 1].attributes = newOp.attributes\n        return this;\n      } else if (is.number(newOp.retain) && is.number(lastOp.retain)) {\n        this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };\n        if (is.object(newOp.attributes)) this.ops[index - 1].attributes = newOp.attributes\n        return this;\n      }\n    }\n  }\n  this.ops.splice(index, 0, newOp);\n  return this;\n};\n\nDelta.prototype.chop = function () {\n  var lastOp = this.ops[this.ops.length - 1];\n  if (lastOp && lastOp.retain && !lastOp.attributes) {\n    this.ops.pop();\n  }\n  return this;\n};\n\nDelta.prototype.length = function () {\n  return this.ops.reduce(function (length, elem) {\n    return length + op.length(elem);\n  }, 0);\n};\n\nDelta.prototype.slice = function (start, end) {\n  start = start || 0;\n  if (!is.number(end)) end = Infinity;\n  var delta = new Delta();\n  var iter = op.iterator(this.ops);\n  var index = 0;\n  while (index < end && iter.hasNext()) {\n    var nextOp;\n    if (index < start) {\n      nextOp = iter.next(start - index);\n    } else {\n      nextOp = iter.next(end - index);\n      delta.push(nextOp);\n    }\n    index += op.length(nextOp);\n  }\n  return delta;\n};\n\n\nDelta.prototype.compose = function (other) {\n  var thisIter = op.iterator(this.ops);\n  var otherIter = op.iterator(other.ops);\n  this.ops = [];\n  while (thisIter.hasNext() || otherIter.hasNext()) {\n    if (otherIter.peekType() === 'insert') {\n      this.push(otherIter.next());\n    } else if (thisIter.peekType() === 'delete') {\n      this.push(thisIter.next());\n    } else {\n      var length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n      var thisOp = thisIter.next(length);\n      var otherOp = otherIter.next(length);\n      if (is.number(otherOp.retain)) {\n        var newOp = {};\n        if (is.number(thisOp.retain)) {\n          newOp.retain = length;\n        } else {\n          newOp.insert = thisOp.insert;\n        }\n        // Preserve null when composing with a retain, otherwise remove it for inserts\n        var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, is.number(thisOp.retain));\n        if (attributes) newOp.attributes = attributes;\n        this.push(newOp);\n      // Other op should be delete, we could be an insert or retain\n      // Insert + delete cancels out\n      } else if (is.number(otherOp['delete']) && is.number(thisOp.retain)) {\n        this.push(otherOp);\n      }\n    }\n  }\n  return this.chop();\n};\n\nDelta.prototype.diff = function (other) {\n  var strings = [this.ops, other.ops].map(function (ops) {\n    return ops.map(function (op) {\n      if (is.string(op.insert)) return op.insert;\n      if (is.number(op.insert)) return NULL_CHARACTER;\n      var prep = ops === other.ops ? 'on' : 'with';\n      throw new Error('diff() called ' + prep + ' non-document');\n    }).join('');\n  });\n  var diffResult = diff(strings[0], strings[1]);\n  var thisIter = op.iterator(this.ops);\n  var otherIter = op.iterator(other.ops);\n  var delta = new Delta();\n  diffResult.forEach(function (component) {\n    var length = component[1].length;\n    while (length > 0) {\n      var opLength = 0;\n      switch (component[0]) {\n        case diff.INSERT:\n          opLength = Math.min(otherIter.peekLength(), length);\n          delta.push(otherIter.next(opLength));\n          break;\n        case diff.DELETE:\n          opLength = Math.min(length, thisIter.peekLength());\n          thisIter.next(opLength);\n          delta['delete'](opLength);\n          break;\n        case diff.EQUAL:\n          opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);\n          var thisOp = thisIter.next(opLength);\n          var otherOp = otherIter.next(opLength);\n          if (thisOp.insert === otherOp.insert) {\n            delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));\n          } else {\n            delta.push(otherOp)['delete'](opLength);\n          }\n          break;\n      }\n      length -= opLength;\n    }\n  });\n  return delta.chop();\n};\n\nDelta.prototype.transform = function (other, priority) {\n  priority = !!priority;\n  if (is.number(other)) {\n    return this.transformPosition(other, priority);\n  }\n  var thisIter = op.iterator(this.ops);\n  var otherIter = op.iterator(other.ops);\n  var delta = new Delta();\n  while (thisIter.hasNext() || otherIter.hasNext()) {\n    if (thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert')) {\n      delta.retain(op.length(thisIter.next()));\n    } else if (otherIter.peekType() === 'insert') {\n      delta.push(otherIter.next());\n    } else {\n      var length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n      var thisOp = thisIter.next(length);\n      var otherOp = otherIter.next(length);\n      if (thisOp['delete']) {\n        // Our delete either makes their delete redundant or removes their retain\n        continue;\n      } else if (otherOp['delete']) {\n        delta.push(otherOp);\n      } else {\n        // We retain either their retain or insert\n        delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));\n      }\n    }\n  }\n  return delta.chop();\n};\n\nDelta.prototype.transformPosition = function (index, priority) {\n  priority = !!priority;\n  var thisIter = op.iterator(this.ops);\n  var offset = 0;\n  while (thisIter.hasNext() && offset <= index) {\n    var length = thisIter.peekLength();\n    var nextType = thisIter.peekType();\n    thisIter.next();\n    if (nextType === 'delete') {\n      index -= Math.min(length, index - offset);\n      continue;\n    } else if (nextType === 'insert' && (offset < index || !priority)) {\n      index += length;\n    }\n    offset += length;\n  }\n  return index;\n};\n\n\nmodule.exports = Delta;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rich-text/lib/delta.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/rich-text/lib/is.js":
/*!******************************************!*\
  !*** ./node_modules/rich-text/lib/is.js ***!
  \******************************************/
/***/ ((module) => {

eval("module.exports = {\n  equal: function (a, b) {\n    if (a === b) return true;\n    if (a == null && b == null) return true;\n    if (a == null || b == null) return false;\n    if (Object.keys(a).length != Object.keys(b).length) return false;\n    for(var key in a) {\n      // Only compare one level deep\n      if (a[key] !== b[key]) return false;\n    }\n    return true;\n  },\n\n  array: function (value) {\n    return Array.isArray(value);\n  },\n\n  number: function (value) {\n    if (typeof value === 'number') return true;\n    if (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Number]') return true;\n    return false;\n  },\n\n  object: function (value) {\n    if (!value) return false;\n    return (typeof value === 'function' || typeof value === 'object');\n  },\n\n  string: function (value) {\n    if (typeof value === 'string') return true;\n    if (typeof value === 'object' && Object.prototype.toString.call(value) === '[object String]') return true;\n    return false;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmljaC10ZXh0L2xpYi9pcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFydGVyLy4vbm9kZV9tb2R1bGVzL3JpY2gtdGV4dC9saWIvaXMuanM/MzkyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgZXF1YWw6IGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xuICAgIGlmIChhID09IG51bGwgJiYgYiA9PSBudWxsKSByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoYSA9PSBudWxsIHx8IGIgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChPYmplY3Qua2V5cyhhKS5sZW5ndGggIT0gT2JqZWN0LmtleXMoYikubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gICAgZm9yKHZhciBrZXkgaW4gYSkge1xuICAgICAgLy8gT25seSBjb21wYXJlIG9uZSBsZXZlbCBkZWVwXG4gICAgICBpZiAoYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG5cbiAgYXJyYXk6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KHZhbHVlKTtcbiAgfSxcblxuICBudW1iZXI6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSByZXR1cm4gdHJ1ZTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpID09PSAnW29iamVjdCBOdW1iZXJdJykgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9LFxuXG4gIG9iamVjdDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgaWYgKCF2YWx1ZSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiAodHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpO1xuICB9LFxuXG4gIHN0cmluZzogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHJldHVybiB0cnVlO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IFN0cmluZ10nKSByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rich-text/lib/is.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/rich-text/lib/op.js":
/*!******************************************!*\
  !*** ./node_modules/rich-text/lib/op.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var is = __webpack_require__(/*! ./is */ \"(ssr)/./node_modules/rich-text/lib/is.js\");\n\n\nvar lib = {\n  attributes: {\n    clone: function (attributes, keepNull) {\n      if (!is.object(attributes)) return {};\n      return Object.keys(attributes).reduce(function (memo, key) {\n        if (attributes[key] !== undefined && (attributes[key] !== null || keepNull)) {\n          memo[key] = attributes[key];\n        }\n        return memo;\n      }, {});\n    },\n\n    compose: function (a, b, keepNull) {\n      if (!is.object(a)) a = {};\n      if (!is.object(b)) b = {};\n      var attributes = this.clone(b, keepNull);\n      for (var key in a) {\n        if (a[key] !== undefined && b[key] === undefined) {\n          attributes[key] = a[key];\n        }\n      }\n      return Object.keys(attributes).length > 0 ? attributes : undefined;\n    },\n\n    diff: function(a, b) {\n      if (!is.object(a)) a = {};\n      if (!is.object(b)) b = {};\n      var attributes = Object.keys(a).concat(Object.keys(b)).reduce(function (attributes, key) {\n        if (a[key] !== b[key]) {\n          attributes[key] = b[key] === undefined ? null : b[key];\n        }\n        return attributes;\n      }, {});\n      return Object.keys(attributes).length > 0 ? attributes : undefined;\n    },\n\n    transform: function (a, b, priority) {\n      if (!is.object(a)) return b;\n      if (!is.object(b)) return undefined;\n      if (!priority) return b;  // b simply overwrites us without priority\n      var attributes = Object.keys(b).reduce(function (attributes, key) {\n        if (a[key] === undefined) attributes[key] = b[key];  // null is a valid value\n        return attributes;\n      }, {});\n      return Object.keys(attributes).length > 0 ? attributes : undefined;\n    }\n  },\n\n  clone: function (op) {\n    var newOp = this.attributes.clone(op);\n    if (is.object(newOp.attributes)) {\n      newOp.attributes = this.attributes.clone(newOp.attributes, true);\n    }\n    return newOp;\n  },\n\n  iterator: function (ops) {\n    return new Iterator(ops);\n  },\n\n  length: function (op) {\n    if (is.number(op['delete'])) {\n      return op['delete'];\n    } else if (is.number(op.retain)) {\n      return op.retain;\n    } else {\n      return is.string(op.insert) ? op.insert.length : 1;\n    }\n  }\n};\n\n\nfunction Iterator(ops) {\n  this.ops = ops;\n  this.index = 0;\n  this.offset = 0;\n};\n\nIterator.prototype.hasNext = function () {\n  return this.peekLength() < Infinity;\n};\n\nIterator.prototype.next = function (length) {\n  if (!length) length = Infinity;\n  var nextOp = this.ops[this.index];\n  if (nextOp) {\n    var offset = this.offset;\n    var opLength = lib.length(nextOp)\n    if (length >= opLength - offset) {\n      length = opLength - offset;\n      this.index += 1;\n      this.offset = 0;\n    } else {\n      this.offset += length;\n    }\n    if (is.number(nextOp['delete'])) {\n      return { 'delete': length };\n    } else {\n      var retOp = {};\n      if (nextOp.attributes) {\n        retOp.attributes = nextOp.attributes;\n      }\n      if (is.number(nextOp.retain)) {\n        retOp.retain = length;\n      } else if (is.string(nextOp.insert)) {\n        retOp.insert = nextOp.insert.substr(offset, length);\n      } else {\n        // offset should === 0, length should === 1\n        retOp.insert = nextOp.insert;\n      }\n      return retOp;\n    }\n  } else {\n    return { retain: Infinity };\n  }\n};\n\nIterator.prototype.peekLength = function () {\n  if (this.ops[this.index]) {\n    // Should never return 0 if our index is being managed correctly\n    return lib.length(this.ops[this.index]) - this.offset;\n  } else {\n    return Infinity;\n  }\n};\n\nIterator.prototype.peekType = function () {\n  if (this.ops[this.index]) {\n    if (is.number(this.ops[this.index]['delete'])) {\n      return 'delete';\n    } else if (is.number(this.ops[this.index].retain)) {\n      return 'retain';\n    } else {\n      return 'insert';\n    }\n  }\n  return 'retain';\n};\n\n\nmodule.exports = lib;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmljaC10ZXh0L2xpYi9vcC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxTQUFTLG1CQUFPLENBQUMsc0RBQU07OztBQUd2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLElBQUk7QUFDWCxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxJQUFJO0FBQ1g7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBLDZEQUE2RDtBQUM3RDtBQUNBLE9BQU8sSUFBSTtBQUNYO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLGFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXJ0ZXIvLi9ub2RlX21vZHVsZXMvcmljaC10ZXh0L2xpYi9vcC5qcz8yNzgwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpcyA9IHJlcXVpcmUoJy4vaXMnKTtcblxuXG52YXIgbGliID0ge1xuICBhdHRyaWJ1dGVzOiB7XG4gICAgY2xvbmU6IGZ1bmN0aW9uIChhdHRyaWJ1dGVzLCBrZWVwTnVsbCkge1xuICAgICAgaWYgKCFpcy5vYmplY3QoYXR0cmlidXRlcykpIHJldHVybiB7fTtcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSkge1xuICAgICAgICBpZiAoYXR0cmlidXRlc1trZXldICE9PSB1bmRlZmluZWQgJiYgKGF0dHJpYnV0ZXNba2V5XSAhPT0gbnVsbCB8fCBrZWVwTnVsbCkpIHtcbiAgICAgICAgICBtZW1vW2tleV0gPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB7fSk7XG4gICAgfSxcblxuICAgIGNvbXBvc2U6IGZ1bmN0aW9uIChhLCBiLCBrZWVwTnVsbCkge1xuICAgICAgaWYgKCFpcy5vYmplY3QoYSkpIGEgPSB7fTtcbiAgICAgIGlmICghaXMub2JqZWN0KGIpKSBiID0ge307XG4gICAgICB2YXIgYXR0cmlidXRlcyA9IHRoaXMuY2xvbmUoYiwga2VlcE51bGwpO1xuICAgICAgZm9yICh2YXIga2V5IGluIGEpIHtcbiAgICAgICAgaWYgKGFba2V5XSAhPT0gdW5kZWZpbmVkICYmIGJba2V5XSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgYXR0cmlidXRlc1trZXldID0gYVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMoYXR0cmlidXRlcykubGVuZ3RoID4gMCA/IGF0dHJpYnV0ZXMgOiB1bmRlZmluZWQ7XG4gICAgfSxcblxuICAgIGRpZmY6IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgIGlmICghaXMub2JqZWN0KGEpKSBhID0ge307XG4gICAgICBpZiAoIWlzLm9iamVjdChiKSkgYiA9IHt9O1xuICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBPYmplY3Qua2V5cyhhKS5jb25jYXQoT2JqZWN0LmtleXMoYikpLnJlZHVjZShmdW5jdGlvbiAoYXR0cmlidXRlcywga2V5KSB7XG4gICAgICAgIGlmIChhW2tleV0gIT09IGJba2V5XSkge1xuICAgICAgICAgIGF0dHJpYnV0ZXNba2V5XSA9IGJba2V5XSA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGJba2V5XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXR0cmlidXRlcztcbiAgICAgIH0sIHt9KTtcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5sZW5ndGggPiAwID8gYXR0cmlidXRlcyA6IHVuZGVmaW5lZDtcbiAgICB9LFxuXG4gICAgdHJhbnNmb3JtOiBmdW5jdGlvbiAoYSwgYiwgcHJpb3JpdHkpIHtcbiAgICAgIGlmICghaXMub2JqZWN0KGEpKSByZXR1cm4gYjtcbiAgICAgIGlmICghaXMub2JqZWN0KGIpKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgaWYgKCFwcmlvcml0eSkgcmV0dXJuIGI7ICAvLyBiIHNpbXBseSBvdmVyd3JpdGVzIHVzIHdpdGhvdXQgcHJpb3JpdHlcbiAgICAgIHZhciBhdHRyaWJ1dGVzID0gT2JqZWN0LmtleXMoYikucmVkdWNlKGZ1bmN0aW9uIChhdHRyaWJ1dGVzLCBrZXkpIHtcbiAgICAgICAgaWYgKGFba2V5XSA9PT0gdW5kZWZpbmVkKSBhdHRyaWJ1dGVzW2tleV0gPSBiW2tleV07ICAvLyBudWxsIGlzIGEgdmFsaWQgdmFsdWVcbiAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZXM7XG4gICAgICB9LCB7fSk7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMoYXR0cmlidXRlcykubGVuZ3RoID4gMCA/IGF0dHJpYnV0ZXMgOiB1bmRlZmluZWQ7XG4gICAgfVxuICB9LFxuXG4gIGNsb25lOiBmdW5jdGlvbiAob3ApIHtcbiAgICB2YXIgbmV3T3AgPSB0aGlzLmF0dHJpYnV0ZXMuY2xvbmUob3ApO1xuICAgIGlmIChpcy5vYmplY3QobmV3T3AuYXR0cmlidXRlcykpIHtcbiAgICAgIG5ld09wLmF0dHJpYnV0ZXMgPSB0aGlzLmF0dHJpYnV0ZXMuY2xvbmUobmV3T3AuYXR0cmlidXRlcywgdHJ1ZSk7XG4gICAgfVxuICAgIHJldHVybiBuZXdPcDtcbiAgfSxcblxuICBpdGVyYXRvcjogZnVuY3Rpb24gKG9wcykge1xuICAgIHJldHVybiBuZXcgSXRlcmF0b3Iob3BzKTtcbiAgfSxcblxuICBsZW5ndGg6IGZ1bmN0aW9uIChvcCkge1xuICAgIGlmIChpcy5udW1iZXIob3BbJ2RlbGV0ZSddKSkge1xuICAgICAgcmV0dXJuIG9wWydkZWxldGUnXTtcbiAgICB9IGVsc2UgaWYgKGlzLm51bWJlcihvcC5yZXRhaW4pKSB7XG4gICAgICByZXR1cm4gb3AucmV0YWluO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gaXMuc3RyaW5nKG9wLmluc2VydCkgPyBvcC5pbnNlcnQubGVuZ3RoIDogMTtcbiAgICB9XG4gIH1cbn07XG5cblxuZnVuY3Rpb24gSXRlcmF0b3Iob3BzKSB7XG4gIHRoaXMub3BzID0gb3BzO1xuICB0aGlzLmluZGV4ID0gMDtcbiAgdGhpcy5vZmZzZXQgPSAwO1xufTtcblxuSXRlcmF0b3IucHJvdG90eXBlLmhhc05leHQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLnBlZWtMZW5ndGgoKSA8IEluZmluaXR5O1xufTtcblxuSXRlcmF0b3IucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbiAobGVuZ3RoKSB7XG4gIGlmICghbGVuZ3RoKSBsZW5ndGggPSBJbmZpbml0eTtcbiAgdmFyIG5leHRPcCA9IHRoaXMub3BzW3RoaXMuaW5kZXhdO1xuICBpZiAobmV4dE9wKSB7XG4gICAgdmFyIG9mZnNldCA9IHRoaXMub2Zmc2V0O1xuICAgIHZhciBvcExlbmd0aCA9IGxpYi5sZW5ndGgobmV4dE9wKVxuICAgIGlmIChsZW5ndGggPj0gb3BMZW5ndGggLSBvZmZzZXQpIHtcbiAgICAgIGxlbmd0aCA9IG9wTGVuZ3RoIC0gb2Zmc2V0O1xuICAgICAgdGhpcy5pbmRleCArPSAxO1xuICAgICAgdGhpcy5vZmZzZXQgPSAwO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm9mZnNldCArPSBsZW5ndGg7XG4gICAgfVxuICAgIGlmIChpcy5udW1iZXIobmV4dE9wWydkZWxldGUnXSkpIHtcbiAgICAgIHJldHVybiB7ICdkZWxldGUnOiBsZW5ndGggfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHJldE9wID0ge307XG4gICAgICBpZiAobmV4dE9wLmF0dHJpYnV0ZXMpIHtcbiAgICAgICAgcmV0T3AuYXR0cmlidXRlcyA9IG5leHRPcC5hdHRyaWJ1dGVzO1xuICAgICAgfVxuICAgICAgaWYgKGlzLm51bWJlcihuZXh0T3AucmV0YWluKSkge1xuICAgICAgICByZXRPcC5yZXRhaW4gPSBsZW5ndGg7XG4gICAgICB9IGVsc2UgaWYgKGlzLnN0cmluZyhuZXh0T3AuaW5zZXJ0KSkge1xuICAgICAgICByZXRPcC5pbnNlcnQgPSBuZXh0T3AuaW5zZXJ0LnN1YnN0cihvZmZzZXQsIGxlbmd0aCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBvZmZzZXQgc2hvdWxkID09PSAwLCBsZW5ndGggc2hvdWxkID09PSAxXG4gICAgICAgIHJldE9wLmluc2VydCA9IG5leHRPcC5pbnNlcnQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmV0T3A7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiB7IHJldGFpbjogSW5maW5pdHkgfTtcbiAgfVxufTtcblxuSXRlcmF0b3IucHJvdG90eXBlLnBlZWtMZW5ndGggPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0aGlzLm9wc1t0aGlzLmluZGV4XSkge1xuICAgIC8vIFNob3VsZCBuZXZlciByZXR1cm4gMCBpZiBvdXIgaW5kZXggaXMgYmVpbmcgbWFuYWdlZCBjb3JyZWN0bHlcbiAgICByZXR1cm4gbGliLmxlbmd0aCh0aGlzLm9wc1t0aGlzLmluZGV4XSkgLSB0aGlzLm9mZnNldDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gSW5maW5pdHk7XG4gIH1cbn07XG5cbkl0ZXJhdG9yLnByb3RvdHlwZS5wZWVrVHlwZSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKHRoaXMub3BzW3RoaXMuaW5kZXhdKSB7XG4gICAgaWYgKGlzLm51bWJlcih0aGlzLm9wc1t0aGlzLmluZGV4XVsnZGVsZXRlJ10pKSB7XG4gICAgICByZXR1cm4gJ2RlbGV0ZSc7XG4gICAgfSBlbHNlIGlmIChpcy5udW1iZXIodGhpcy5vcHNbdGhpcy5pbmRleF0ucmV0YWluKSkge1xuICAgICAgcmV0dXJuICdyZXRhaW4nO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJ2luc2VydCc7XG4gICAgfVxuICB9XG4gIHJldHVybiAncmV0YWluJztcbn07XG5cblxubW9kdWxlLmV4cG9ydHMgPSBsaWI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rich-text/lib/op.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/rich-text/lib/type.js":
/*!********************************************!*\
  !*** ./node_modules/rich-text/lib/type.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Delta = __webpack_require__(/*! ./delta */ \"(ssr)/./node_modules/rich-text/lib/delta.js\");\nvar pkg = __webpack_require__(/*! ../package.json */ \"(ssr)/./node_modules/rich-text/package.json\");\n\n\nmodule.exports = {\n  Delta: Delta,\n  name: 'rich-text',\n  uri: 'http://sharejs.org/types/rich-text/v1',\n\n  create: function (initial) {\n    return new Delta(initial);\n  },\n\n  apply: function (snapshot, delta) {\n    snapshot = new Delta(snapshot);\n    delta = new Delta(delta);\n    return snapshot.compose(delta);\n  },\n\n  compose: function (delta1, delta2) {\n    delta1 = new Delta(delta1);\n    delta2 = new Delta(delta2);\n    return delta1.compose(delta2);\n  },\n\n  diff: function (delta1, delta2) {\n    delta1 = new Delta(delta1);\n    delta2 = new Delta(delta2);\n    return delta1.diff(delta2);\n  },\n\n  transform: function (delta1, delta2, side) {\n    delta1 = new Delta(delta1);\n    delta2 = new Delta(delta2);\n    // Fuzzer specs is in opposite order of delta interface\n    return delta2.transform(delta1, side === 'left');\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmljaC10ZXh0L2xpYi90eXBlLmpzIiwibWFwcGluZ3MiOiJBQUFBLFlBQVksbUJBQU8sQ0FBQyw0REFBUztBQUM3QixVQUFVLG1CQUFPLENBQUMsb0VBQWlCOzs7QUFHbkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFydGVyLy4vbm9kZV9tb2R1bGVzL3JpY2gtdGV4dC9saWIvdHlwZS5qcz8zZjUxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBEZWx0YSA9IHJlcXVpcmUoJy4vZGVsdGEnKTtcbnZhciBwa2cgPSByZXF1aXJlKCcuLi9wYWNrYWdlLmpzb24nKTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgRGVsdGE6IERlbHRhLFxuICBuYW1lOiAncmljaC10ZXh0JyxcbiAgdXJpOiAnaHR0cDovL3NoYXJlanMub3JnL3R5cGVzL3JpY2gtdGV4dC92MScsXG5cbiAgY3JlYXRlOiBmdW5jdGlvbiAoaW5pdGlhbCkge1xuICAgIHJldHVybiBuZXcgRGVsdGEoaW5pdGlhbCk7XG4gIH0sXG5cbiAgYXBwbHk6IGZ1bmN0aW9uIChzbmFwc2hvdCwgZGVsdGEpIHtcbiAgICBzbmFwc2hvdCA9IG5ldyBEZWx0YShzbmFwc2hvdCk7XG4gICAgZGVsdGEgPSBuZXcgRGVsdGEoZGVsdGEpO1xuICAgIHJldHVybiBzbmFwc2hvdC5jb21wb3NlKGRlbHRhKTtcbiAgfSxcblxuICBjb21wb3NlOiBmdW5jdGlvbiAoZGVsdGExLCBkZWx0YTIpIHtcbiAgICBkZWx0YTEgPSBuZXcgRGVsdGEoZGVsdGExKTtcbiAgICBkZWx0YTIgPSBuZXcgRGVsdGEoZGVsdGEyKTtcbiAgICByZXR1cm4gZGVsdGExLmNvbXBvc2UoZGVsdGEyKTtcbiAgfSxcblxuICBkaWZmOiBmdW5jdGlvbiAoZGVsdGExLCBkZWx0YTIpIHtcbiAgICBkZWx0YTEgPSBuZXcgRGVsdGEoZGVsdGExKTtcbiAgICBkZWx0YTIgPSBuZXcgRGVsdGEoZGVsdGEyKTtcbiAgICByZXR1cm4gZGVsdGExLmRpZmYoZGVsdGEyKTtcbiAgfSxcblxuICB0cmFuc2Zvcm06IGZ1bmN0aW9uIChkZWx0YTEsIGRlbHRhMiwgc2lkZSkge1xuICAgIGRlbHRhMSA9IG5ldyBEZWx0YShkZWx0YTEpO1xuICAgIGRlbHRhMiA9IG5ldyBEZWx0YShkZWx0YTIpO1xuICAgIC8vIEZ1enplciBzcGVjcyBpcyBpbiBvcHBvc2l0ZSBvcmRlciBvZiBkZWx0YSBpbnRlcmZhY2VcbiAgICByZXR1cm4gZGVsdGEyLnRyYW5zZm9ybShkZWx0YTEsIHNpZGUgPT09ICdsZWZ0Jyk7XG4gIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/rich-text/lib/type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/rich-text/package.json":
/*!*********************************************!*\
  !*** ./node_modules/rich-text/package.json ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"rich-text","version":"1.0.3","description":"Format for representing rich text documents and changes.","author":"Jason Chen <jhchen7@gmail.com>","homepage":"https://github.com/ottypes/rich-text","main":"index.js","dependencies":{"fast-diff":"~1.0.0"},"devDependencies":{"chai":"~1.9.1","coveralls":"~2.11.1","grunt":"~0.4.5","istanbul":"~0.3.0","lodash":"~2.4.1","mocha":"~1.21.4","ot-fuzzer":"~1.0.0"},"engines":{"node":">=0.10"},"license":"MIT","scripts":{"test":"grunt test"},"repository":{"type":"git","url":"https://github.com/ottypes/rich-text"},"bugs":{"url":"https://github.com/ottypes/rich-text/issues"},"keywords":["rich text","ot","operational transform","delta"]}');

/***/ })

};
;